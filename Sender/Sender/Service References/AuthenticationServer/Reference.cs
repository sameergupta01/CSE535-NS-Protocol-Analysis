//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3649
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientApplication.AuthenticationServer {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EncryptionType", Namespace="http://tempuri.org/")]
    public enum EncryptionType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AES = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DES = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpenSSL = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AuthenticationServer.AuthenticationServerSoap")]
    public interface AuthenticationServerSoap {
        
        // CODEGEN: Generating message contract since element name sender_userName from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAuthenticationToken", ReplyAction="*")]
        ClientApplication.AuthenticationServer.getAuthenticationTokenResponse getAuthenticationToken(ClientApplication.AuthenticationServer.getAuthenticationTokenRequest request);
        
        // CODEGEN: Generating message contract since element name sender_userName from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAuthenticationTokenFixedVer", ReplyAction="*")]
        ClientApplication.AuthenticationServer.getAuthenticationTokenFixedVerResponse getAuthenticationTokenFixedVer(ClientApplication.AuthenticationServer.getAuthenticationTokenFixedVerRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getAuthenticationTokenRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getAuthenticationToken", Namespace="http://tempuri.org/", Order=0)]
        public ClientApplication.AuthenticationServer.getAuthenticationTokenRequestBody Body;
        
        public getAuthenticationTokenRequest() {
        }
        
        public getAuthenticationTokenRequest(ClientApplication.AuthenticationServer.getAuthenticationTokenRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getAuthenticationTokenRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sender_userName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string receiver_userName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string sender_nonce;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public ClientApplication.AuthenticationServer.EncryptionType Encryption_Type;
        
        public getAuthenticationTokenRequestBody() {
        }
        
        public getAuthenticationTokenRequestBody(string sender_userName, string receiver_userName, string sender_nonce, ClientApplication.AuthenticationServer.EncryptionType Encryption_Type) {
            this.sender_userName = sender_userName;
            this.receiver_userName = receiver_userName;
            this.sender_nonce = sender_nonce;
            this.Encryption_Type = Encryption_Type;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getAuthenticationTokenResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getAuthenticationTokenResponse", Namespace="http://tempuri.org/", Order=0)]
        public ClientApplication.AuthenticationServer.getAuthenticationTokenResponseBody Body;
        
        public getAuthenticationTokenResponse() {
        }
        
        public getAuthenticationTokenResponse(ClientApplication.AuthenticationServer.getAuthenticationTokenResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getAuthenticationTokenResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string getAuthenticationTokenResult;
        
        public getAuthenticationTokenResponseBody() {
        }
        
        public getAuthenticationTokenResponseBody(string getAuthenticationTokenResult) {
            this.getAuthenticationTokenResult = getAuthenticationTokenResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getAuthenticationTokenFixedVerRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getAuthenticationTokenFixedVer", Namespace="http://tempuri.org/", Order=0)]
        public ClientApplication.AuthenticationServer.getAuthenticationTokenFixedVerRequestBody Body;
        
        public getAuthenticationTokenFixedVerRequest() {
        }
        
        public getAuthenticationTokenFixedVerRequest(ClientApplication.AuthenticationServer.getAuthenticationTokenFixedVerRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getAuthenticationTokenFixedVerRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sender_userName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string receiver_userName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string sender_nonce;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string r_nonce_and_username;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public ClientApplication.AuthenticationServer.EncryptionType Encryption_Type;
        
        public getAuthenticationTokenFixedVerRequestBody() {
        }
        
        public getAuthenticationTokenFixedVerRequestBody(string sender_userName, string receiver_userName, string sender_nonce, string r_nonce_and_username, ClientApplication.AuthenticationServer.EncryptionType Encryption_Type) {
            this.sender_userName = sender_userName;
            this.receiver_userName = receiver_userName;
            this.sender_nonce = sender_nonce;
            this.r_nonce_and_username = r_nonce_and_username;
            this.Encryption_Type = Encryption_Type;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class getAuthenticationTokenFixedVerResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="getAuthenticationTokenFixedVerResponse", Namespace="http://tempuri.org/", Order=0)]
        public ClientApplication.AuthenticationServer.getAuthenticationTokenFixedVerResponseBody Body;
        
        public getAuthenticationTokenFixedVerResponse() {
        }
        
        public getAuthenticationTokenFixedVerResponse(ClientApplication.AuthenticationServer.getAuthenticationTokenFixedVerResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class getAuthenticationTokenFixedVerResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string getAuthenticationTokenFixedVerResult;
        
        public getAuthenticationTokenFixedVerResponseBody() {
        }
        
        public getAuthenticationTokenFixedVerResponseBody(string getAuthenticationTokenFixedVerResult) {
            this.getAuthenticationTokenFixedVerResult = getAuthenticationTokenFixedVerResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface AuthenticationServerSoapChannel : ClientApplication.AuthenticationServer.AuthenticationServerSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class AuthenticationServerSoapClient : System.ServiceModel.ClientBase<ClientApplication.AuthenticationServer.AuthenticationServerSoap>, ClientApplication.AuthenticationServer.AuthenticationServerSoap {
        
        public AuthenticationServerSoapClient() {
        }
        
        public AuthenticationServerSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthenticationServerSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationServerSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationServerSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ClientApplication.AuthenticationServer.getAuthenticationTokenResponse ClientApplication.AuthenticationServer.AuthenticationServerSoap.getAuthenticationToken(ClientApplication.AuthenticationServer.getAuthenticationTokenRequest request) {
            return base.Channel.getAuthenticationToken(request);
        }
        
        public string getAuthenticationToken(string sender_userName, string receiver_userName, string sender_nonce, ClientApplication.AuthenticationServer.EncryptionType Encryption_Type) {
            ClientApplication.AuthenticationServer.getAuthenticationTokenRequest inValue = new ClientApplication.AuthenticationServer.getAuthenticationTokenRequest();
            inValue.Body = new ClientApplication.AuthenticationServer.getAuthenticationTokenRequestBody();
            inValue.Body.sender_userName = sender_userName;
            inValue.Body.receiver_userName = receiver_userName;
            inValue.Body.sender_nonce = sender_nonce;
            inValue.Body.Encryption_Type = Encryption_Type;
            ClientApplication.AuthenticationServer.getAuthenticationTokenResponse retVal = ((ClientApplication.AuthenticationServer.AuthenticationServerSoap)(this)).getAuthenticationToken(inValue);
            return retVal.Body.getAuthenticationTokenResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ClientApplication.AuthenticationServer.getAuthenticationTokenFixedVerResponse ClientApplication.AuthenticationServer.AuthenticationServerSoap.getAuthenticationTokenFixedVer(ClientApplication.AuthenticationServer.getAuthenticationTokenFixedVerRequest request) {
            return base.Channel.getAuthenticationTokenFixedVer(request);
        }
        
        public string getAuthenticationTokenFixedVer(string sender_userName, string receiver_userName, string sender_nonce, string r_nonce_and_username, ClientApplication.AuthenticationServer.EncryptionType Encryption_Type) {
            ClientApplication.AuthenticationServer.getAuthenticationTokenFixedVerRequest inValue = new ClientApplication.AuthenticationServer.getAuthenticationTokenFixedVerRequest();
            inValue.Body = new ClientApplication.AuthenticationServer.getAuthenticationTokenFixedVerRequestBody();
            inValue.Body.sender_userName = sender_userName;
            inValue.Body.receiver_userName = receiver_userName;
            inValue.Body.sender_nonce = sender_nonce;
            inValue.Body.r_nonce_and_username = r_nonce_and_username;
            inValue.Body.Encryption_Type = Encryption_Type;
            ClientApplication.AuthenticationServer.getAuthenticationTokenFixedVerResponse retVal = ((ClientApplication.AuthenticationServer.AuthenticationServerSoap)(this)).getAuthenticationTokenFixedVer(inValue);
            return retVal.Body.getAuthenticationTokenFixedVerResult;
        }
    }
}
